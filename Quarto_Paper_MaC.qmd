---
title: "Quarto_Paper_MaC"
format: html
editor: visual
---

# Democracy and social media: Between the dialogue and the strategy

Andrés Scherman^1^, Pedro Fierro^2^ and Leo Yuanliang Shan^3^

^1^ LEAS at School of Communication and Journalism, Universidad Adolfo Ibáñez.

^2^ Business School, Universidad Adolfo Ibáñez; and Department of Media and Communication, London School of Economics.

^3^ School of Journalism and Mass Communication, University of Wisconsin-Madison.

## Abstract

This study analyzes the role of traditional news media and social media in public deliberation within democratic systems. Using the concepts of Understanding Orientation (consensus-oriented, communicative rationality) and Strategic Orientation (goal-oriented, instrumental rationality), proposed by Jürgen Habermas, this study looks at the public space in a digital context to explore how the news media can either contribute to the existence of rational communication in the public debate or, conversely, promote interventions of a strategic nature. To estimate the influence of traditional news media and social media on the orientation to engage in dialogue with others within a framework of rationality and equality, this study relies on a two-wave online panel survey conducted in Chile before and after the constitutional referendum, held on September 4, 2022, a period of intense political polarization. The first wave (T1) received 2,117 responses, and the second wave (T2) received 903 responses. Results show that Understanding Orientation is a predictor of political situations linked to public deliberation, such as Political Participation and Political Interest. However, news consumption in both traditional news outlets and social media is not associated with the presence of Understanding Orientation, but rather with Strategic Orientation. These results support a more pessimistic view of the contribution of the news media and social media to creating a rational public sphere, where reason should predominate in interactions between citizens to strengthen democracy.


```{r echo=FALSE, results='hide', message=FALSE, warning=FALSE}

# clean workspace
rm(list=ls())

options(scipen=999, # avoid scientific notation
        stringsAsFactors = FALSE, digits = 2)

options(digits = 7)

library(haven)
library(knitr)
library(lattice)
library(tidyverse)
library(here)
library(flextable)
library(devtools)
library(lavaan)
library(ggplot2)
library(plm)
library(naniar)
library(purrr)
library(psych)
library(interactions)
library(semPlot)
library(coefplot)
library(Hmisc)

```

```{r echo=FALSE, results='hide', message=FALSE, warning=FALSE}
#Import Data
data_w1 <- read_sav("Data_W1.sav")

# ID
data_w1$id <- data_w1$CodPanelista

#Import Data
data_w3 <- read_sav("Data_W3.sav")

# ID
data_w3$id <- data_w3$CodPanelista

```

### Variables

```{r echo=FALSE, results='hide', message=FALSE, warning=FALSE}
# Age
data_w1$age_num <- data_w1$age

# Socioeconomic Status
data_w1$ses <- data_w1$RECO_NSE

# Education
data_w1$educ <- data_w1$P60

# Sex (1=women)
data_w1 <- data_w1%>%
  mutate(sex = ifelse(SEX == 2, 1,
                      ifelse(SEX == 1, 0, NA)))

# Ideology
data_w1$ideology <- ifelse(data_w1$P32 == 99, NA, data_w1$P32)

# Online Political Efficacy
data_w1$ope1 <- data_w1$P59_1
data_w1$ope2 <- data_w1$P59_2
data_w1$ope3 <- data_w1$P59_3
data_w1$ope4 <- data_w1$P59_4

# External Political Efficacy (recode)
data_w1$extef1 <- data_w1$P58_1
data_w1$extef2 <- data_w1$P58_2
data_w1$extef3 <- data_w1$P58_3

# To recode efficacies (intef1, intef3, extef1, extef3, extef4)
data_w1 <- data_w1 %>%
  mutate(across(c(extef1, extef2, extef3), ~ 6 - .x))

# Internal Political Efficacy
data_w1$intef1 <- data_w1$P58_4
data_w1$intef2 <- data_w1$P58_5
data_w1$intef3 <- data_w1$P58_6

# Media Exposure
data_w1$tv <- data_w1$P4_1
data_w1$cable <- data_w1$P4_2
data_w1$newspaper <- data_w1$P4_3
data_w1$radio <- data_w1$P4_4
data_w1$tradonline <- data_w1$P4_5
data_w1$online <- data_w1$P4_6
data_w1$podcast <- data_w1$P4_7
data_w1$officialsm <- data_w1$P4_8

# Social Media Exposure
data_w1$fb <- ifelse(data_w1$P5_1 == 99, NA, data_w1$P5_1)
data_w1$insta <- ifelse(data_w1$P5_2 == 99, NA, data_w1$P5_2)
data_w1$twitter <- ifelse(data_w1$P5_3 == 99, NA, data_w1$P5_3)
data_w1$whatsapp <- ifelse(data_w1$P5_4 == 99, NA, data_w1$P5_4)
data_w1$youtube <- ifelse(data_w1$P5_5 == 99, NA, data_w1$P5_5)
data_w1$tiktok <- ifelse(data_w1$P5_6 == 99, NA, data_w1$P5_6)
data_w1$discord <- ifelse(data_w1$P5_7 == 99, NA, data_w1$P5_7)
data_w1$twitch <- ifelse(data_w1$P5_8 == 99, NA, data_w1$P5_8)

# Franja Exposure
data_w1$franja <- data_w1$P6_1

# Social Media Political Use
data_w1$use1 <- data_w1$P25_5
data_w1$use2 <- data_w1$P25_6
data_w1$use3 <- data_w1$P25_7
data_w1$use4 <- data_w1$P25_8
data_w1$use5 <- data_w1$P25_9
data_w1$use6 <- data_w1$P25_10
data_w1$use7 <- data_w1$P25_11

# Interest
data_w1$polint <- data_w1$P21
data_w1$procint <- data_w1$P22
data_w1$plebint <- data_w1$P23

# Interpersonal confidence
data_w1 <- data_w1%>%
  mutate(intercon = ifelse(P51 == 2, 1,
                      ifelse(P51 == 1, 0, NA)))

#Understanding orientation
data_w1$under1 <- data_w1$P48_1
data_w1$under2 <- data_w1$P48_4
data_w1$under3 <- data_w1$P48_5
data_w1$under4 <- data_w1$P48_7

#Strategic orientation
data_w1$strate1 <- data_w1$P49_2
data_w1$strate2 <- data_w1$P49_3
data_w1$strate3 <- data_w1$P49_4
data_w1$strate4 <- data_w1$P49_8

##### Data from wave 3

#Understanding orientation
data_w3$under_w3_1 <- data_w3$P48_1
data_w3$under_w3_2 <- data_w3$P48_2
data_w3$under_w3_3 <- data_w3$P48_3
data_w3$under_w3_4 <- data_w3$P48_4
data_w3$under_w3_5 <- data_w3$P48_5
data_w3$under_w3_6 <- data_w3$P48_6
data_w3$under_w3_7 <- data_w3$P48_7
data_w3$under_w3_8 <- data_w3$P48_8

#Strategic orientation
data_w3$strate_w3_1 <- data_w3$P49_1
data_w3$strate_w3_2 <- data_w3$P49_2
data_w3$strate_w3_3 <- data_w3$P49_3
data_w3$strate_w3_4 <- data_w3$P49_4
data_w3$strate_w3_5 <- data_w3$P49_5
data_w3$strate_w3_6 <- data_w3$P49_6
data_w3$strate_w3_7 <- data_w3$P49_7
data_w3$strate_w3_8 <- data_w3$P49_8

#Informal Participation
data_w3$part_w3_1 <- data_w3$P25_1
data_w3$part_w3_2 <- data_w3$P25_2
data_w3$part_w3_3 <- data_w3$P25_3
data_w3$part_w3_4 <- data_w3$P25_4
data_w3$part_w3_5 <- data_w3$P25_5
data_w3$part_w3_6 <- data_w3$P25_6
data_w3$part_w3_7 <- data_w3$P25_7
data_w3$part_w3_8 <- data_w3$P25_8
data_w3$part_w3_9 <- data_w3$P25_9
data_w3$part_w3_10 <- data_w3$P25_10
data_w3$part_w3_11 <- data_w3$P25_11

#incidental exposure
data_w3$news_agree <- data_w3$P14_1
data_w3$news_disagree <- data_w3$P14_2
data_w3$news_pol <- data_w3$P14_3
data_w3$news_pleb <- data_w3$P14_4
data_w3$news_elec <- data_w3$P14_5

#Affective polarisation

data_w3$disapproval <- data_w3$P44_7
data_w3$disreject <- data_w3$P44_8

data_w3$polar1 <- ifelse(data_w3$disapproval == 0 | data_w3$disapproval == 10, 6,
                         ifelse(data_w3$disapproval == 1 | data_w3$disapproval == 9, 5,
                                ifelse(data_w3$disapproval == 2 | data_w3$disapproval == 8, 4,
                                       ifelse(data_w3$disapproval == 3 | data_w3$disapproval == 7, 3,
                                              ifelse(data_w3$disapproval == 4 | data_w3$disapproval == 6, 2,
                                                     ifelse(data_w3$disapproval == 5, 1, NA))))))

data_w3$polar2 <- ifelse(data_w3$disreject == 0 | data_w3$disreject == 10, 6,
                         ifelse(data_w3$disreject == 1 | data_w3$disreject == 9, 5,
                                ifelse(data_w3$disreject == 2 | data_w3$disreject == 8, 4,
                                       ifelse(data_w3$disreject == 3 | data_w3$disreject == 7, 3,
                                              ifelse(data_w3$disreject == 4 | data_w3$disreject == 6, 2,
                                                     ifelse(data_w3$disreject == 5, 1, NA))))))

```

```{r echo=FALSE, results='hide', message=FALSE, warning=FALSE}
# Assuming 'id' is your key variable for merging
data_w3_selected <- data_w3 %>%
  select(id, starts_with("strate_w3_"), starts_with("under_w3_"), starts_with("part_w3_"), starts_with("news_")) %>%
  drop_na()

data_w1_na <- na.omit(data_w1[c("id", "polint", "procint", "plebint", "ope1", "ope2", "ope3", "ope4", "intef1", "intef2", "intef3", "extef1", "extef2", "extef3", "intercon", "tv", "cable", "newspaper", "radio", "tradonline", "online", "podcast", "officialsm","fb", "insta", "twitter", "whatsapp", "youtube", "tiktok", "age_num", "ses", "sex", "educ")])
sum(is.na(data_w1_na))

# Merge dataframes
merged_data <- data_w1_na %>%
  left_join(data_w3_selected, by = "id") %>%
  drop_na()

```


```{r echo=FALSE, results='hide', message=FALSE, warning=FALSE}
cronbach_ope <- alpha(na.omit(merged_data[c("ope1", "ope2", "ope3", "ope4")]))
cronbach_ope

cronbach_intef <- alpha(na.omit(merged_data[c("intef1", "intef2", "intef3")]))
cronbach_intef

cronbach_extef <- alpha(na.omit(merged_data[c("extef1", "extef2", "extef3")]))
cronbach_extef

cronbach_media <- alpha(na.omit(merged_data[c("tv", "cable", "newspaper", "radio")]))
cronbach_media

cronbach_digital <- alpha(na.omit(merged_data[c("tradonline", "online", "podcast", "officialsm")]))
cronbach_digital

cronbach_social <- alpha(na.omit(merged_data[c("fb", "insta", "twitter", "whatsapp", "youtube", "tiktok")]))
cronbach_social

cronbach_interest <- alpha(na.omit(merged_data[c("polint", "procint", "plebint")]))
cronbach_interest

cronbach_under <- alpha(na.omit(merged_data[c("under_w3_1", "under_w3_2", "under_w3_3", "under_w3_4", "under_w3_5", "under_w3_6", "under_w3_7", "under_w3_8")]))
cronbach_under

cronbach_strate <- alpha(na.omit(merged_data[c("strate_w3_1", "strate_w3_2", "strate_w3_3", "strate_w3_4", "strate_w3_5", "strate_w3_6", "strate_w3_7", "strate_w3_8")]))
cronbach_strate

cronbach_incid <- alpha(na.omit(merged_data[c("news_pleb", "news_elec")]))
cronbach_incid


```

### Analysis


```{r echo=FALSE, results='hide', message=FALSE, warning=FALSE}

merged_data <- merged_data %>%
  mutate(across(where(is.labelled), as.numeric))

cfa.model1 <- 'ope =~ ope1 + ope2 + ope3 + ope4
              intef =~ intef1 + intef2 + intef3
              extef =~ extef1 + extef2 + extef3
              interest =~ polint + procint + plebint'
cfa.model2 <- 'media =~ tv + cable + newspaper + radio
              digital =~ tradonline + online + podcast + officialsm
              social =~ fb + insta + twitter + whatsapp + youtube + tiktok'
cfa.model3 <- 'under =~ under_w3_1 + under_w3_2 + under_w3_3 + under_w3_4 + under_w3_5 + under_w3_6 + under_w3_7 + under_w3_8
              strate =~ strate_w3_1 + strate_w3_2 + strate_w3_3 + strate_w3_4 + strate_w3_5 + strate_w3_6 + strate_w3_7 + strate_w3_8'
cfa.model4 <- 'incidental =~ news_pleb + news_elec'


fit_cfa1 <- cfa(cfa.model1, data = merged_data)
latent_scores1 <- predict(fit_cfa1)

fit_cfa2 <- cfa(cfa.model2, data = merged_data)
latent_scores2 <- predict(fit_cfa2)

fit_cfa3 <- cfa(cfa.model3, data = merged_data)
latent_scores3 <- predict(fit_cfa3)

fit_cfa4 <- cfa(cfa.model4, data = merged_data)
latent_scores4 <- predict(fit_cfa4)


merged_data <- cbind(merged_data, latent_scores1, latent_scores2, latent_scores3, latent_scores4)

```

**Figure 1** Measurement Model for Political Efficacies

```{r echo=FALSE, message=FALSE, warning=FALSE}
semPaths(fit_cfa1, "std", layout = "tree", rotation = 2,
         whatLabels = "std", edge.label.cex = 0.8,
         sizeMan = 3, sizeLat = 7, title = TRUE)
```
Note: Own elaboration.

**Figure 2** Measurment model for Media Exposure
```{r echo=FALSE, message=FALSE, warning=FALSE}
semPaths(fit_cfa2, "std", layout = "tree", rotation = 2,
         whatLabels = "std", edge.label.cex = 0.8,
         sizeMan = 3, sizeLat = 7, title = TRUE)
```
Note: Own elaboration.

**Figure 3** Measurment model for understanding and strategic orientations
```{r echo=FALSE, message=FALSE, warning=FALSE}

semPaths(fit_cfa3, "std", layout = "tree", rotation = 2,
         whatLabels = "std", edge.label.cex = 0.8,
         sizeMan = 3, sizeLat = 7, title = TRUE)
```
Note: Own elaboration.


**Figure 4** Measurment model for incidental exposure
```{r echo=FALSE, message=FALSE, warning=FALSE}
semPaths(fit_cfa4, "std", layout = "tree", rotation = 2,
         whatLabels = "std", edge.label.cex = 0.8,
         sizeMan = 3, sizeLat = 7, title = TRUE)

```

### Results

```{r echo=FALSE, results='hide', message=FALSE, warning=FALSE}
# Update the extraction function to avoid spaces in names
get_coef <- function(model, model_name) {
  coefs <- summary(model)$coefficients
  data.frame(
    Term = rownames(coefs),
    Estimate = coefs[, "Estimate"],
    Std_Error = coefs[, "Std. Error"],  # Rename to 'Std_Error'
    Model = model_name
  )
}

# Create a mapping of old variable names to new names
name_mapping <- c(
  ses = "Socioeconomic Status",
  sex = "Gender",
  age_num = "Age",
  media = "Trad. Media Expo.",
  digital = "Dig. Media Expo.",
  social = "Soc. Media Expo.",
  interest = "Pol. Interest",
  intercon = "Interp. Conf.",
  extef = "Ext. Efficacy",
  intef = "Int. Efficacy",
  ope = "Onl. Efficacy",
  under = "Orientation",
  strate = "Orientation",
  incidental = "Incidental Expo."
  )

```

**Table 1** OLS Regression for Understanding Orientation.

```{r echo=FALSE, message=FALSE, warning=FALSE}
model1 <- lm(under ~ ses + sex + age_num + media + digital + social + interest + extef + intef + ope + incidental + intercon, data = merged_data)
summary(model1)

```

**Table 2** OLS Regression for Strategic Orientation.

```{r echo=FALSE, message=FALSE, warning=FALSE}
model2 <- lm(strate ~ ses + sex + age_num + media + digital + social + interest + extef + intef + ope + incidental + intercon, data = merged_data)
summary(model2)

```
**Figure 5** Coefplot for understanding orientation and strategic orientation.

```{r echo=FALSE, message=FALSE, warning=FALSE}
# Assuming coef_df is already prepared as per previous instructions

# Apply the function to both models
coef_df1 <- get_coef(model1, "Model 1")
coef_df2 <- get_coef(model2, "Model 2")

# Combine the data frames and remove the intercept
coef_df <- rbind(coef_df1, coef_df2)
coef_df <- coef_df[coef_df$Term != "(Intercept)", ]

# Calculate 95% confidence intervals and determine significance
coef_df <- coef_df %>%
  mutate(
    Lower_CI = Estimate - 1.96 * Std_Error,  # Lower bound of the CI
    Upper_CI = Estimate + 1.96 * Std_Error,  # Upper bound of the CI
    Significant = if_else(Lower_CI > 0 & Upper_CI > 0 | Lower_CI < 0 & Upper_CI < 0, TRUE, FALSE)  
    )


# Apply the mapping to the dataframe
coef_df <- coef_df %>%
  mutate(Term = factor(Term, levels = names(name_mapping), labels = name_mapping))

# Define a dodge width for better separation
dodge_width <- 0.5

# Create the plot with updated names
ggplot(coef_df, aes(x = Term, y = Estimate, ymin = Lower_CI, ymax = Upper_CI, color = Model, group = Model)) +
  geom_pointrange(position = position_dodge(width = dodge_width), aes(size = Significant)) +
  geom_hline(yintercept = 0, linetype = "dashed", color = "orange") +
  theme_minimal() +
  labs(x = "Variables", y = "Estimated Coefficients") +
  coord_flip() +  # Flips the axes for better visualization of terms
  scale_color_manual(values = c("darkblue", "darkred"),
                     labels = c("Understanding", "Strategic")) +  # Set custom colors for each model
  scale_size_manual(values = c(0.5, 1.5), guide = FALSE) +  # Adjust line width based on significance
  theme(
    legend.position = "right",  # Hide the legend for line size
    axis.text.y = element_text(size = 8)  # Adjust text size if needed
  )
```

**Table 3** Regressions considering interactions

```{r echo=FALSE, message=FALSE, warning=FALSE}

# For under
model1_int1 <- lm(under ~ ses + sex + age_num + media + digital + social + interest + extef + intef + ope + incidental + intercon + incidental*media, data = merged_data)
summary(model1_int1)

model1_int2 <- lm(under ~ ses + sex + age_num + media + digital + social + interest + extef + intef + ope + incidental + intercon + incidental*digital, data = merged_data)
summary(model1_int2)

model1_int3 <- lm(under ~ ses + sex + age_num + media + digital + social + interest + extef + intef + ope + incidental + intercon + incidental*social, data = merged_data)
summary(model1_int3)

# For strate
model2_int1 <- lm(strate ~ ses + sex + age_num + media + digital + social + interest + extef + intef + ope + incidental + intercon + incidental*media, data = merged_data)
summary(model2_int1)

model2_int2 <- lm(strate ~ ses + sex + age_num + media + digital + social + interest + extef + intef + ope + incidental + intercon + incidental*digital, data = merged_data)
summary(model2_int2)

model2_int3 <- lm(strate ~ ses + sex + age_num + media + digital + social + interest + extef + intef + ope + incidental + intercon + incidental*social, data = merged_data)
summary(model2_int3)


```


**Figure 6** Interactions between incidental exposure and news consumption

```{r  echo=FALSE, results='hide', message=FALSE, warning=FALSE}
merged_data$incidental_dummy <- ifelse(merged_data$incidental < 0, 0,
                                       ifelse(merged_data$incidental > 0, 1, NA))

model1_int1_plot <- lm(under ~ ses + sex + age_num + media + digital + social + interest + extef + intef + ope + incidental_dummy + intercon + incidental_dummy*media, data = merged_data)
summary(model1_int1_plot)


model1_int2_plot <- lm(under ~ ses + sex + age_num + media + digital + social + interest + extef + intef + ope + incidental_dummy + intercon + incidental_dummy*digital, data = merged_data)
summary(model1_int2_plot)


model1_int3_plot <- lm(under ~ ses + sex + age_num + media + digital + social + interest + extef + intef + ope + incidental_dummy + intercon + incidental_dummy*social, data = merged_data)
summary(model1_int3_plot)


```
```{r echo=FALSE, message=FALSE, warning=FALSE}

# Plotting the interaction with customized labels and no legend title

plot1 <- interact_plot(model = model1_int1_plot, pred = "media", modx = "incidental_dummy", 
                       interval = TRUE, x.label = "Media", y.label = "Understanding Orientation", 
                       modx.labels = c("Low Incidental", "High Incidental"))


plot2 <- interact_plot(model = model1_int2_plot, pred = "digital", modx = "incidental_dummy", 
                       interval = TRUE, x.label = "Digital Media", y.label = "Understanding Orientation", 
                       modx.labels = c("Low Incidental", "High Incidental"))


plot3 <- interact_plot(model = model1_int3_plot, pred = "social", modx = "incidental_dummy", 
                       interval = TRUE, x.label = "Social Media", y.label = "Understanding Orientation", 
                       modx.labels = c("Low Incidental", "High Incidental"))

plot1
plot2
plot3

```


### Review process R&R

## Interactions

```{r}
library(interactions)

plot1 <- interact_plot(model = model1_int1, pred = "media", modx = "incidental",
                       interval = TRUE, x.label = "Media", y.label = "Understanding Orientation",
                       modx.values = "plus-minus",  # plots mean +/- 1 SD of incidental
                       modx.labels = c("Low Incidental", "High Incidental"))

plot2 <- interact_plot(model = model1_int2, pred = "digital", modx = "incidental",
                       interval = TRUE, x.label = "Digital Media", y.label = "Understanding Orientation",
                       modx.values = "plus-minus",
                       modx.labels = c("Low Incidental", "High Incidental"))

plot3 <- interact_plot(model = model1_int3, pred = "social", modx = "incidental",
                       interval = TRUE, x.label = "Social Media", y.label = "Understanding Orientation",
                       modx.values = "plus-minus",
                       modx.labels = c("Low Incidental", "High Incidental"))

# Show plots
plot1
plot2
plot3
```

## Correlation Matrix

```{r}
# List of variables in your model
vars_of_interest <- c("under", "strate", "ses", "sex", "age_num", "media", "digital", "social", "interest", "extef", "intef", "ope", "incidental", "intercon")

# Subset the data
data_subset <- merged_data[ , vars_of_interest]


# Compute correlation matrix (pairwise complete cases)
cor_matrix <- cor(data_subset, use = "pairwise.complete.obs")


# Get correlations + p-values
correlation_results <- corr.test(data_subset, use = "pairwise")

# Print correlation table with stars (psych automatically gives r and p values)
correlation_results


corstars <- function(x) {
  require(Hmisc)
  x <- as.matrix(x)
  R <- rcorr(x)$r
  p <- rcorr(x)$P
  
  # define significance levels
  stars <- ifelse(p < .001, "***", ifelse(p < .01, "**", ifelse(p < .05, "*", "")))
  
  # format matrix
  R <- format(round(R, 2))
  Rnew <- matrix(paste(R, stars, sep=" "), ncol=ncol(R))
  dimnames(Rnew) <- dimnames(R)
  Rnew
}


# Apply function
corstars(data_subset)


```


## Testing multicolinearity

```{r}
model1_mul1 <- lm(under ~ ses + sex + age_num + media + interest + extef + intef + ope + incidental + intercon, data = merged_data)
summary(model1_mul1)

model1_mul2 <- lm(under ~ ses + sex + age_num + digital + interest + extef + intef + ope + incidental + intercon, data = merged_data)
summary(model1_mul2)

model1_mul3 <- lm(under ~ ses + sex + age_num + social + interest + extef + intef + ope + incidental + intercon, data = merged_data)
summary(model1_mul3)
```



## Appendix

**Appendix 1** SEM for Understanding Orientation

```{r echo=FALSE, message=FALSE, warning=FALSE}
sem1 <- 'ope_a1 =~ ope1 + ope2 + ope3 + ope4
          intef_a1 =~ intef1 + intef2 + intef3
          extef_a1 =~ extef1 + extef2 + extef3
          interest_a1 =~ polint + procint + plebint
          media_a1 =~ tv + cable + newspaper + radio
          digital_a1 =~ tradonline + online + podcast + officialsm
          social_a1 =~ fb + insta + twitter + whatsapp + youtube + tiktok
          under_a1 =~ under_w3_1 + under_w3_2 + under_w3_3 + under_w3_4 + under_w3_5 + under_w3_6 + under_w3_7 + under_w3_8
          incidental_a1 =~ news_pleb + news_elec
          under_a1 ~ ses + sex + age_num + media_a1 + digital_a1 + social_a1 + interest_a1 + incidental_a1 + intercon + extef_a1 + intef_a1 + ope_a1'

fit_sem1 <- sem(sem1, data = merged_data)

summary(fit_sem1, fit.measures = TRUE, standardized = TRUE)

```
**Appendix 2** SEM for Strategic Orientation

```{r echo=FALSE, message=FALSE, warning=FALSE}
sem2 <- 'ope_a2 =~ ope1 + ope2 + ope3 + ope4
          intef_a2 =~ intef1 + intef2 + intef3
          extef_a2 =~ extef1 + extef2 + extef3
          interest_a2 =~ polint + procint + plebint
          media_a2 =~ tv + cable + newspaper + radio
          digital_a2 =~ tradonline + online + podcast + officialsm
          social_a2 =~ fb + insta + twitter + whatsapp + youtube + tiktok
          strate_a2 =~ strate_w3_1 + strate_w3_2 + strate_w3_3 + strate_w3_4 + strate_w3_5 + strate_w3_6 + strate_w3_7 + strate_w3_8
          incidental_a2 =~ news_pleb + news_elec
          strate_a2 ~ ses + sex + age_num + media_a2 + digital_a2 + social_a2 + interest_a2 + incidental_a2 + intercon + extef_a2 + intef_a2 + ope_a2'

fit_sem2 <- sem(sem2, data = merged_data)

summary(fit_sem2, fit.measures = TRUE, standardized = TRUE)
```


### Working with W1

```{r echo=FALSE, results='hide', message=FALSE, warning=FALSE}

data_justw1_na <- na.omit(data_w1[c("id", "polint", "procint", "plebint", "ope1", "ope2", "ope3", "ope4", "intef1", "intef2", "intef3", "extef1", "extef2", "extef3", "intercon", "tv", "cable", "newspaper", "radio", "tradonline", "online", "podcast", "officialsm","fb", "insta", "twitter", "whatsapp", "youtube", "tiktok", "age_num", "ses", "sex", "educ", "under1", "under2", "under3", "under4", "strate1", "strate2", "strate3", "strate4")])
sum(is.na(data_justw1_na))

data_justw1_na <- data_justw1_na %>%
  mutate(across(where(is.labelled), as.numeric))

cfa.model_w1_1 <- 'ope_1 =~ ope1 + ope2 + ope3 + ope4
              intef_1 =~ intef1 + intef2 + intef3
              extef_1 =~ extef1 + extef2 + extef3
              interest_1 =~ polint + procint + plebint'
cfa.model_w1_2 <- 'media_1 =~ tv + cable + newspaper + radio
              digital_1 =~ tradonline + online + podcast + officialsm
              social_1 =~ fb + insta + twitter + whatsapp + youtube + tiktok'
cfa.model_w1_3 <- 'under_1 =~ under1 + under2 + under3 + under4
              strate_1 =~ strate1 + strate2 + strate3 + strate4'

fit_cfa_w1_1 <- cfa(cfa.model_w1_1, data = data_justw1_na)
latent_scores_w1_1 <- predict(fit_cfa_w1_1)

fit_cfa_w1_2 <- cfa(cfa.model_w1_2, data = data_justw1_na)
latent_scores_w1_2 <- predict(fit_cfa_w1_2)

fit_cfa_w1_3 <- cfa(cfa.model_w1_3, data = data_justw1_na)
latent_scores_w1_3 <- predict(fit_cfa_w1_3)

data_justw1_na <- cbind(data_justw1_na, latent_scores_w1_1, latent_scores_w1_2, latent_scores_w1_3)
```

**Appendix 3**. OLS for Understanding Orientation just using W1.

```{r echo=FALSE, message=FALSE, warning=FALSE}
model1_w1 <- lm(under_1 ~ ses + sex + age_num + media_1 + digital_1 + social_1 + interest_1 + intercon + extef_1 + intef_1 + ope_1, data = data_justw1_na)
summary(model1_w1)
```

**Appendix 4**. OLS for Strategic Orientation just using W1.
```{r echo=FALSE, message=FALSE, warning=FALSE}
model2_w1 <- lm(strate_1 ~ ses + sex + age_num + media_1 + digital_1 + social_1 + interest_1 + intercon + extef_1 + intef_1 + ope_1, data = data_justw1_na)
summary(model2_w1)
```

**Appendix 5**. OLS for Strategic Orientation just using W1, no factor.
```{r echo=FALSE, message=FALSE, warning=FALSE}

model2_1 <- lm(strate1 ~ ses + sex + age_num + media_1 + digital_1 + social_1 + interest_1 + intercon + extef_1 + intef_1 + ope_1, data = data_justw1_na)
summary(model2_1)
model2_2 <- lm(strate2 ~ ses + sex + age_num + media_1 + digital_1 + social_1 + interest_1 + intercon + extef_1 + intef_1 + ope_1, data = data_justw1_na)
summary(model2_2)
model2_3 <- lm(strate3 ~ ses + sex + age_num + media_1 + digital_1 + social_1 + interest_1 + intercon + extef_1 + intef_1 + ope_1, data = data_justw1_na)
summary(model2_3)
model2_4 <- lm(strate4 ~ ses + sex + age_num + media_1 + digital_1 + social_1 + interest_1 + intercon + extef_1 + intef_1 + ope_1, data = data_justw1_na)
summary(model2_4)

```

```{r echo=FALSE, message=FALSE, warning=FALSE}

# Apply the function to both models
coef_strate1 <- get_coef(model2_1, "Model S1")
coef_strate2 <- get_coef(model2_2, "Model S2")
coef_strate3 <- get_coef(model2_3, "Model S3")
coef_strate4 <- get_coef(model2_4, "Model S4")

# Combine the data frames and remove the intercept
coef_strate <- rbind(coef_strate1, coef_strate2, coef_strate3, coef_strate4)
coef_strate <- coef_strate[coef_strate$Term != "(Intercept)", ]

# Calculate 95% confidence intervals and determine significance
coef_strate <- coef_strate %>%
  mutate(
    Lower_CI = Estimate - 1.645 * Std_Error,  # Lower bound of the CI
    Upper_CI = Estimate + 1.645 * Std_Error,  # Upper bound of the CI
    Significant = if_else(Lower_CI > 0 & Upper_CI > 0 | Lower_CI < 0 & Upper_CI < 0, TRUE, FALSE)
  )

# Create a mapping of old variable names to new names
name_mapping_1 <- c(
  ses = "Socioeconomic Status",
  sex = "Gender",
  age_num = "Age",
  media_1 = "Media Expo.",
  digital_1 = "Dig, Media Expo.",
  social_1 = "Soc. Media Expo.",
  interest_1 = "Pol. Interest",
  intercon = "Interp. Conf.",
  extef_1 = "Ext. Efficacy",
  intef_1 = "Int. Efficacy",
  ope_1 = "Onl. Efficacy"
)

# Apply the mapping to the dataframe
coef_strate <- coef_strate %>%
  mutate(Term = factor(Term, levels = names(name_mapping_1), labels = name_mapping_1))

# Define a dodge width for better separation
dodge_width <- 0.5

# Create the plot with updated names
ggplot(coef_strate, aes(x = Term, y = Estimate, ymin = Lower_CI, ymax = Upper_CI, color = Model, group = Model)) +
  geom_pointrange(position = position_dodge(width = dodge_width)) +
  geom_hline(yintercept = 0, linetype = "dashed", color = "orange") +
  theme_minimal() +
  labs(x = "Variables", y = "Estimated Coefficients") +
  coord_flip() +  # Flips the axes for better visualization of terms
  scale_color_manual(
    values = c("darkblue", "darkred","darkgreen", "purple"),
    labels = c("Talk if I win", "Form is more important", "Not express what I think", "Agreements waste of time")) +  # Set custom colors for each model
  scale_size_manual(values = c(0.5, 1.5), guide = FALSE) +  # Adjust line width based on significance
  theme(
    legend.position = "right",
    axis.text.y = element_text(size = 8)  # Adjust text size if needed
  )
```

### Alternative models, by adding observable variables.

```{r echo=FALSE, message=FALSE, warning=FALSE}
data_justw1_na$undersum <- (data_justw1_na$under1+data_justw1_na$under2+data_justw1_na$under3+data_justw1_na$under4)/4
data_justw1_na$stratesum <- (data_justw1_na$strate1+data_justw1_na$strate2+data_justw1_na$strate3+data_justw1_na$strate4)/4

data_justw1_na$mediasum <- (data_justw1_na$tv+data_justw1_na$cable+data_justw1_na$newspaper+data_justw1_na$radio)/4
data_justw1_na$digitalsum <-(data_justw1_na$tradonline+data_justw1_na$online+data_justw1_na$podcast+data_justw1_na$officialsm)/4
data_justw1_na$socialsum <- (data_justw1_na$fb+data_justw1_na$insta+data_justw1_na$twitter+data_justw1_na$whatsapp+data_justw1_na$youtube+data_justw1_na$tiktok)/6

data_justw1_na$extefsum <- (data_justw1_na$extef1+data_justw1_na$extef2+data_justw1_na$extef3)/3
data_justw1_na$intefsum <- (data_justw1_na$intef1+data_justw1_na$intef2+data_justw1_na$intef3)/3
data_justw1_na$opesum <- (data_justw1_na$ope1+data_justw1_na$ope2+data_justw1_na$ope3+data_justw1_na$ope4)/4

```

**Appendix 6**. OLS for Understanding Orientation and Strategic Orientation just using W1 and by adding observable variebles (not CFA).

```{r echo=FALSE, message=FALSE, warning=FALSE}
model_a1 <- lm(undersum ~ ses + sex + age_num + mediasum + digitalsum + socialsum + polint + intercon + extefsum + intefsum + opesum, data = data_justw1_na)
summary(model_a1)

model_a2 <- lm(stratesum ~ ses + sex + age_num + mediasum + digitalsum + socialsum + polint + intercon + extefsum + intefsum + opesum, data = data_justw1_na)
summary(model_a2)
```

